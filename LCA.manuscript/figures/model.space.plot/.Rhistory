}
print(sum(census[,2]))
L <- 3#19
M <- 6#100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
print(sum(census[,2]))
100000^2
585000^2
585000^20
585000^20->z
y <- z+1
y==z
y-z
install.packages("gmp")
as.bigq(585000^2)
library("gmp", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
x<- as.bigq(585000^2)
y <- x + 1
x==y
x-y
x
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
print(sum(census[,2]))
x <- sum(census[,2])
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- as.bigq(1)
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
print(sum(census[,2]))
y <- sum(census[,2])
as.bigq(1)
as.bigq(1)[1]
census[1, 2] <- as.bigq(1)[1]
census[1, 2] <- as.bigq(1)[[1]]
as.bigq(1)
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
print(sum(census[,2]))
y <- sum(census[,2])
View(census)
x <- as.bigq(census[1,1])
x
census[1,1]
View(census)
x <- as.bigq(census[1,2])
x
y <- as.bigq(sum(census[,2]))
y
print(y)
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
y <- as.bigq(sum(census[,2]))
print(y)
L <- 20
M <- 96
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
y <- as.bigq(sum(census[,2]))
print(y)
L <- 20
M <- 96
M <- M-1
foo2 <- census <- list()
census[[1]] <- as.bigq(1)
i <- 1
foo <- foo2
L <- 20
M <- 96
M <- M-1
foo2 <- census <- list()
census[[1]] <- as.bigq(1)
i <- 1
foo[[1]] <- 43
foo <- list()
foo[[1]] <- 2
foo[[2]] <- 2
foo[[3]] <- 2
sum(foo)
sum(foo[[1:3]])
sum(unlist(foo))
unlist(foo)
unlist(foo)[2:3]
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
#print(census)
}
y <- as.bigq(sum(census[,2]))
print(y)
L <- 19
M <- 10
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
foo[1, 2] <- sum(census[2:L,2])
}
census <- foo
print(census)
}
y <- as.bigq(sum(census[,2]))
print(y)
L <- 19
M <- 10
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
}
foo[1, 2] <- sum(census[2:L,2])
census <- foo
print(census)
}
y <- as.bigq(sum(census[,2]))
print(y)
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
}
foo[1, 2] <- sum(census[2:L,2])
census <- foo
print(census)
}
y <- as.bigq(sum(census[,2]))
print(y)
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
}
foo[1, 2] <- sum(census[2:L,2])
census <- foo
print(census)
}
x <- as.bigq(sum(census[,2]))
y <- sum(as.bigq(census[,2]))
print(x)
print(y)
L <- 19
M <- 100
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
}
foo[1, 2] <- sum(census[2:L,2])
census <- foo
print(census)
}
x <- as.bigq(sum(census[,2]))
y <- sum(as.bigq(census[,2]))
print(x)
print(y)
L <- 16
M <- 83
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
}
foo[1, 2] <- sum(census[2:L,2])
census <- foo
print(census)
}
x <- as.bigq(sum(census[,2]))
y <- sum(as.bigq(census[,2]))
print(x)
print(y)
L <- 3
M <- 6
M <- M-1
foo2 <- census <- matrix(c(1:L, rep(0, L)),L,2)
census[1, 2] <- 1
for(i in 1:M){
foo <- foo2
#print(paste("Month:", i))
for(j in 2:L){
foo[j, 2] <- census[(j-1), 2]
}
foo[1, 2] <- sum(census[2:L,2])
census <- foo
print(census)
}
x <- as.bigq(sum(census[,2]))
y <- sum(as.bigq(census[,2]))
print(x)
print(y)
L <- 20
M <- 96
M <- M-1
foo2 <- census <- list()
census[[1]] <- as.bigq(1)
for(i in 1:M){
foo <- foo2
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
foo[[1]] <- sum(unlist(census)[2:L]]
census <- foo
L <- 20
M <- 96
M <- M-1
foo2 <- census <- list()
census[[1]] <- as.bigq(1)
for(i in 1:M){
foo <- foo2
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
foo[[1]] <- sum(unlist(census)[2:L]
census <- foo
}
y <- sum(unlist(census))
print(y)
L <- 20
M <- 96
M <- M-1
foo2 <- census <- list()
census[[1]] <- as.bigq(1)
for(i in 1:M){
foo <- foo2
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
foo[[1]] <- sum(unlist(census)[2:L])
census <- foo
}
y <- sum(unlist(census))
print(y)
L <- 20
M <- 96
M <- M-1
foo2 <- census <- list()
census[[1]] <- as.bigq(1)
i <- 1
foo <- foo2
j <- 2
foo[[1]] <- 0
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
foo2 <- census <- list(length=L)
census[[1]] <- as.bigq(1)
for(i in 1:M){
foo <- foo2
foo[[1]] <- 0
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
foo[[1]] <- sum(unlist(census)[2:L])
census <- foo
}
W <- vector("list", 602)
foo2 <- census <- vector("list", L)
L <- 20
M <- 96
M <- M-1
foo2 <- census <- vector("list", L)
census[[1]] <- as.bigq(1)
for(i in 1:M){
foo <- foo2
foo[[1]] <- 0
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
foo[[1]] <- sum(unlist(census)[2:L])
census <- foo
}
y <- sum(unlist(census))
print(y)
unlist(census)
unlist(census)[2:L]
census
L <- 20
M <- 96
M <- M-1
foo2 <- census <- vector("list", L)
census[[1]] <- as.bigq(1)
census
foo <- foo2
foo[[1]] <- 0
foo[[1]] <- as.bigq(0)
census
foo
j <- 2
census[[j-1]]
foo[[j]] <- census[[j-1]]
foo
unlist(census)
census[[1]]
census[[2]]
unlist(census)
sum(unlist(census))
census[[1]]
census[[1]]->x
census[[1]]->y
x + y
length(census)
for(i in 1:length(census)){
bar[i] <- census[i]
}
bar <- vector()
for(i in 1:length(census)){
bar[i] <- census[i]
}
bar <- vector()
for(i in 1:length(census)){
bar[i] <- census[[i]]
}
sum(census[1:3])
L <- 20
M <- 96
M <- M-1
foo2 <- census <- vector("list", L)
census[[1]] <- as.bigz(1)
for(i in 1:M){
foo <- foo2
foo[[1]] <- as.bigz(0)
for(j in 2:L){
foo[[j]] <- census[[j-1]]
}
bar <- vector()
for(i in 1:length(census)){
bar[i] <- census[[i]]
}
census <- foo
}
y <- sum(unlist(census))
print(y)
y <- add.bigz(census)
y <- add.bigz(unlist(census))
unlist(census)
37450/2
.2^5
.2^6
99660/2
sqrt(1/2)
1 - .5^2
(1 - .5^2) * (1-.2^2)
(1 - .5^2) * (.2^2)
(.5^2) * (1-.2^2)
(.5^2) * (.2^2)
(1 - .5^2) * (1-.2^2) * 95
(1 - .5^2) * (.2^2) * 38
(.5^2) * (1-.2^2) * 90
(.5^2) * (.2^2) * 33
(1 - .5^2) * (1-.2^2) * 95 +
(1 - .5^2) * (.2^2) * 38 +
(.5^2) * (1-.2^2) * 90 +
(.5^2) * (.2^2) * 33
95*.4
38*.1
90*.4
33*.1
95*.4 +
38*.1 +
90*.4 +
33*.1
91.47-81.1
95-38
57*.2
2*.25*2.5
2*.64*11.4
91.47-20.74
library("evobiR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rgbif", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("rgbif")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("rgdal")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("evobiR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
system.file("3.fasta")
system.file("3.fasta", package="evobiR")
read.fasta(system.file("3.fasta", package='evobiR'))->fii
readFasta(system.file("3.fasta", package='evobiR'))->fii
CalcPopD
read.alignment(system.file("3.fasta", package='evobiR'))->fii
read.alignment(system.file("3.fasta", package='evobiR'), format='fasta')->fii
install.packages("evobiR")
citation(geiger)
citation("geiger")
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
setwd("~/Desktop/Dropbox/papers/LCA/datasets")
spl <- read.csv("miller.sp.lng.csv", row.names=1)
srl <- read.csv("miller.rcpt.lng.csv", row.names=1)
foo2 <- AnalyzeCrossesMM(spl, Cmatrix = "MP", model.sum = 0.95, even.sex = T, graph=T, max.models = 70000)
spl<- foo2[[3]]
spl.daic <-spl
foo <- AnalyzeCrossesMM(srl, Cmatrix = "MP", model.sum = 0.99, even.sex = T, graph=T)
srl.daic<- foo[[3]]
setwd("~/Desktop/Dropbox/papers/LCA/figures/model.space")
write.csv(spl.daic, file="spl.daic.csv")
write.csv(srl.daic, file="srl.daic.csv")
