(1 - .5^2) * (.2^2)
(.5^2) * (1-.2^2)
(.5^2) * (.2^2)
(1 - .5^2) * (1-.2^2) * 95
(1 - .5^2) * (.2^2) * 38
(.5^2) * (1-.2^2) * 90
(.5^2) * (.2^2) * 33
(1 - .5^2) * (1-.2^2) * 95 +
(1 - .5^2) * (.2^2) * 38 +
(.5^2) * (1-.2^2) * 90 +
(.5^2) * (.2^2) * 33
95*.4
38*.1
90*.4
33*.1
95*.4 +
38*.1 +
90*.4 +
33*.1
91.47-81.1
95-38
57*.2
2*.25*2.5
2*.64*11.4
91.47-20.74
library("evobiR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rgbif", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("rgbif")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("rgdal")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("evobiR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
system.file("3.fasta")
system.file("3.fasta", package="evobiR")
read.fasta(system.file("3.fasta", package='evobiR'))->fii
readFasta(system.file("3.fasta", package='evobiR'))->fii
CalcPopD
read.alignment(system.file("3.fasta", package='evobiR'))->fii
read.alignment(system.file("3.fasta", package='evobiR'), format='fasta')->fii
install.packages("evobiR")
citation(geiger)
citation("geiger")
library(evobiR)
CoalSim(census = 15, lw = 2, ln.col = 'blue')
CoalSim(census = 15, lw = 2, ln.col = 'blue')
foo <- c(1,2,3,4,5)
mode(foo)
Mode(foo)
?subplex
??subplex
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(x~y)
foo <- lm(x~y)
foo
summary(foo)
foo <- lm(y~x)
summary(foo)
data(mtcars)
mtcars
mtcars$mpg
foo <- lm(mtcars$mpg~mtcars$wt)
summary(foo)
mean(mtcars$wt)
plot(x=mtcars$wt,y=mtcars$mpg)
predict.lm(foo,mean(mtcars$wt))
predict.lm(foo)
install.packages("devtools")
library(devtools)
install_github("SAGA", username='coleoguy')
library(SAGA)
## First try loading data sets
data(PH) #Lynch and Walsh Nicotina plant height
data(SL) #Miller sperm length
data(SR) # Miller sperm receptacle length
data(ban.osa) # Demuth 2004 productivity ecuador x japan
data(dar.bho) # Demuth 2004 productivity tanzania x india
data(per.inf) # Demuth 2004 productivity peru x portugal
data(sin.cro) # Demuth 2004 productivity malaysia x croatia
## Primary analysis function with various argument options and datasets
results <- AnalyzeCrossesMM(PH, model.sum = .25, graph=T) # small conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .99, graph=T) # large conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .99, max.models = 10, graph=T) # restrict number of mod to store
results <- AnalyzeCrossesMM(PH, model.sum = .05, graph=T) # single model result
results <- AnalyzeCrossesMM(PH, even.sex=T, graph=F) # equal sex ratio
results <- AnalyzeCrossesMM(ban.osa, even.sex=F, graph=T)
results <- AnalyzeCrossesMM(dar.bho, even.sex=F, graph=T)
results <- AnalyzeCrossesMM(per.inf, even.sex=F, graph=T)
results <- AnalyzeCrossesMM(sin.cro, even.sex=F, graph=T)
results <- AnalyzeCrossesMM(SR, model.sum = .25, graph=T)
# Function to return the cmatrix being used
cmat <- DisplayCmatrix("MP")
# Function to display the result of a specific model
EvaluateModel(data=results, model=3)
# Function to display model space
EvaluateModel(data=results, model=7)
EvaluateModel(data=results, model=57)
EvaluateModel(data=results, model=157)
sample(1:length(results[[1]]),1)
length(results[[1]])
EvaluateModel(data=results, model=sample(1:length(results[[1]]),1))
EvaluateModel(data=results, model=sample(1:length(results[[1]]),1))
EvaluateModel(data=results, model=sample(1:length(results[[1]]),1))
VisModelSpace(data=results, cex.u=2)
remove.packages(SAGA)
remove.packages("SAGA")
# Heath Blackmon
# Testing script to share with Jeff
install.packages("devtools")
library(devtools)
install_github("SAGA", username='coleoguy')
library(SAGA)
remove.packages("SAGA")
remove.packages("plotrix")
install.packages("devtools")
# Heath Blackmon
# Testing script to share with Jeff
install.packages("devtools")
library(devtools)
install_github("SAGA", username='coleoguy')
library(SAGA)
help(DisplayCmatrix)
cmat <- DisplayCmatrix("MP")
View(cmat)
install.packages("devtools")
library(devtools)
install_github("SAGA", username='coleoguy')
library(SAGA)
data(PH) #Lynch and Walsh Nicotina plant height
data(SL) #Miller sperm length
data(SR) # Miller sperm receptacle length
data(ban.osa) # Demuth 2004 productivity ecuador x japan
data(dar.bho) # Demuth 2004 productivity tanzania x india
data(per.inf) # Demuth 2004 productivity peru x portugal
data(sin.cro) # Demuth 2004 productivity malaysia x croatia
## Primary analysis function with various argument options and datasets
results <- AnalyzeCrossesMM(PH, model.sum = .25, graph=T) # small conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .99, graph=T) # large conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .1, graph=T) # small conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .01, graph=T) # small conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .95, graph=T) # small conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .99, graph=T) # large conf set of models
results <- AnalyzeCrossesMM(PH, model.sum = .9999, graph=T) # large conf set of models
install_github("SAGA", username='coleoguy')
library(SAGA)
results <- AnalyzeCrossesMM(PH, model.sum = .9999, graph=T) # large conf set of models
install_github("SAGA", username='coleoguy')
library(SAGA)
## First try loading data sets
results <- AnalyzeCrossesMM(PH, model.sum = .95, graph=T) # small conf set of models
install_github("SAGA", username='coleoguy')
library(SAGA)
results <- AnalyzeCrossesMM(PH, model.sum = .95, graph=T) # small conf set of models
results <- AnalyzeCrossesMM(ban.osa, even.sex=F, graph=T)
help(PH)
wordTOcodons <- function(x){
table <- matrix(c("START", 'A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I',
'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', 'O', 'U',
'STOP', ' ', 'ATG', 'GCT', 'CGC', 'AAT', 'GAT', 'TGT', 'CAG',
'GAA', 'GGT', 'CAT', 'ATT', 'TTA', 'AAG', 'ATG', 'TTC',
'CCA', 'TCA', 'ACT', 'TGG', 'TAC', 'GTT', 'TAG', 'TGA',
'TAA', ' '),25,2)
x <- toupper(x)
x <- strsplit(x, "")[[1]]
result <- list()
for(i in 1:length(x)){
result[[i]] <- table[table[,1] == x[i] , 2]
if(!x[i] %in% table[,1]){
result[[i]] <- '-'
}
}
return(paste(unlist(result), sep="", collapse=" "))
}
x <- "There is grandeur in this view of life"
wordTOcodons(x)
table <- matrix(c("START", 'A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I',
'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', 'O', 'U',
'STOP', ' ', 'ATG', 'GCT', 'CGC', 'AAT', 'GAT', 'TGT', 'CAG',
'GAA', 'GGT', 'CAT', 'ATT', 'TTA', 'AAG', 'ATG', 'TTC',
'CCA', 'TCA', 'ACT', 'TGG', 'TAC', 'GTT', 'TAG', 'TGA',
'TAA', ' '),25,2)
View(table)
table <- matrix(c('A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I',
'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V', 'O', 'U',
' ', 'GCT', 'CGC', 'AAT', 'GAT', 'TGT', 'CAG',
'GAA', 'GGT', 'CAT', 'ATT', 'TTA', 'AAG', 'ATG', 'TTC',
'CCA', 'TCA', 'ACT', 'TGG', 'TAC', 'GTT', 'TAG', 'TGA',
'TAA', ' '),25,2)
table <- matrix(c(' ', 'A', 'B', 'C', 'D', 'E',
'F', 'G', 'H', 'I', 'J', 'K',
'L', 'M', 'N', 'O', 'P', 'Q',
'R', 'S', 'T', 'U', 'V', 'W',
'X', 'Y', 'Z',
' ', 'GCT', 'RAT', 'TGC', 'GAA',
'TTC', 'GGG', 'CAT', 'ATA', 'MTT', 'AAA',
'CTG', 'ATG', 'AAC', 'TAG', 'CCC', 'CAG',
'CGC', 'AGC', 'ACT', 'TGA', 'GTA', 'TGG',
'NNN', 'TAC', 'SAA'),27,2)
table <- matrix(c(' ', 'A', 'B', 'C', 'D', 'E',
'F', 'G', 'H', 'I', 'J', 'K',
'L', 'M', 'N', 'O', 'P', 'Q',
'R', 'S', 'T', 'U', 'V', 'W',
'X', 'Y', 'Z',
' ',   'GCT', 'RAT', 'TGC', 'GAA',
'TTC', 'GGG', 'CAT', 'ATA', 'MTT', 'AAA',
'CTG', 'ATG', 'AAC', 'TAG', 'CCC', 'CAG',
'CGC', 'AGC', 'ACT', 'TGA', 'GTA', 'TGG',
'NNN', 'TAC', 'SAA'),27,2)
table <- matrix(c(' ', 'A', 'B', 'C', 'D', 'E',
'F', 'G', 'H', 'I', 'J', 'K',
'L', 'M', 'N', 'O', 'P', 'Q',
'R', 'S', 'T', 'U', 'V', 'W',
'X', 'Y', 'Z',
' ',   'GCT', 'RAT', 'TGC', 'GAT', 'GAA',
'TTC', 'GGG', 'CAT', 'ATA', 'MTT', 'AAA',
'CTG', 'ATG', 'AAC', 'TAG', 'CCC', 'CAG',
'CGC', 'AGC', 'ACT', 'TGA', 'GTA', 'TGG',
'NNN', 'TAC', 'SAA'),27,2)
View(table)
wordTOcodons <- function(x){
table <- matrix(c(' ', 'A', 'B', 'C', 'D', 'E',
'F', 'G', 'H', 'I', 'J', 'K',
'L', 'M', 'N', 'O', 'P', 'Q',
'R', 'S', 'T', 'U', 'V', 'W',
'X', 'Y', 'Z',
' ',   'GCT', 'RAT', 'TGC', 'GAT', 'GAA',
'TTC', 'GGG', 'CAT', 'ATA', 'MTT', 'AAA',
'CTG', 'ATG', 'AAC', 'TAG', 'CCC', 'CAG',
'CGC', 'AGC', 'ACT', 'TGA', 'GTA', 'TGG',
'NNN', 'TAC', 'SAA'),27,2)
x <- toupper(x)
x <- strsplit(x, "")[[1]]
result <- list()
for(i in 1:length(x)){
result[[i]] <- table[table[,1] == x[i] , 2]
if(!x[i] %in% table[,1]){
result[[i]] <- '-'
}
}
return(paste(unlist(result), sep="", collapse=" "))
}
x <- "There is grandeur in this view of life"
wordTOcodons(x)
library(ape)
help(read.nexus)
library(geiger)
trees <- list()
for(i in 1:100){
trees[[i]] <- sim.bdtree(b=1, d=0, stop="taxa", n=100, seed=0)
}
trees <- list()
for(i in 1:100){
trees[[i]] <- sim.bdtree(b=1, d=0, stop="taxa", n=100)
}
class(trees) <- "multiPhylo"
plot(trees[[1]])
for(i in 1:100){
trees[[i]] <- sim.bdtree(b=1, d=.5, stop="taxa", n=100, extinct=F)
}
class(trees) <- "multiPhylo"
plot(trees[[1]])
library(geiger)
trees <- list()
for(i in 1:100){
trees[[i]] <- drop.extinct(sim.bdtree(b=1, d=.5, stop="taxa", n=100, extinct=F))
}
class(trees) <- "multiPhylo"
plot(trees[[1]])
plot(trees[[3]])
trees[[3]]
names(trees[[3]])
trees[[3]]$edge.length
foo <- simchar(trees[[3]], par=.02)
foo <- sim.char(trees[[3]], par=.02)
foo
contMap(tree[[3]], x=foo)
library(phytools)
contMap(tree[[3]], x=foo)
contMap(trees[[3]], x=foo)
names(foo)
foo
foo[,1]
summary(foo)
foo
row.names(foo)
foo[,1]
as.vector(foo)
foo2 <- as.vector(foo)
names(foo2) <- row.names(foo)
contMap(trees[[3]], x=foo2)
cont.traits <- list()
for(i in 1:100){
foo <- sim.char(trees[[i]], par=.02)
foo2 <- as.vector(foo)
names(foo2) <- row.names(foo)
cont.traits[[i]] <- foo2
print(i)
# contMap(trees[[3]], x=foo2)
}
contMap(trees[[i]], x=cont.traits[[i]])
q <- list(rbind(c(-.5, .5), c(.5, -.5)))
q
q <- list(rbind(c(-.5, 0), c(.5, -.5)))
q
q <- list(rbind(c(-.5, .5), c(0, -.5)))
q
q <- list(rbind(c(-.5, .5), c(0, 0)))
i <- 1
q <- list(rbind(c(-.5, .5), c(0, 0)))
foo <- sim.char(trees[[i]], par=q, model="discrete", root=1)
foo
q <- list(rbind(c(-.005, .005), c(0, 0)))
foo <- sim.char(trees[[i]], par=q, model="discrete", root=1)
foo
q <- list(rbind(c(-.01, .01), c(0, 0)))
foo <- sim.char(trees[[i]], par=q, model="discrete", root=1)
foo
q <- list(rbind(c(-.05, .05), c(0, 0)))
foo <- sim.char(trees[[i]], par=q, model="discrete", root=1)
foo
disc.nocor <- list()
q <- list(rbind(c(-.05, .05), c(0, 0)))
for(i in 1:100){
foo <- sim.char(trees[[i]], par=q, model="discrete", root=1)
foo2 <- as.vector(foo)
names(foo2) <- row.names(foo)
disc.nocor[[i]] <- foo2
print(i)
}
foo <- make.simmap(trees[[1]], x=disc.nocor[[1]], model="ARD")
foo <- make.simmap(trees[[1]], x=disc.nocor[[1]], model="ARD", pi=c(1,0))
foo <- make.simmap(trees[[2]], x=disc.nocor[[2]], model="ARD", pi=c(1,0))
foo <- make.simmap(trees[[2]], x=disc.nocor[[2]], model="ARD", pi=c(0,1))
plotSimmap(foo)
foo <- make.simmap(trees[[2]], x=disc.nocor[[2]], model="ARD", pi=c(1,0))
plotSimmap(foo)
foo <- make.simmap(trees[[3]], x=disc.nocor[[3]], model="ARD", pi=c(1,0))
plotSimmap(foo)
foo <- make.simmap(trees[[4]], x=disc.nocor[[4]], model="ARD", pi=c(1,0))
plotSimmap(foo)
foo <- make.simmap(trees[[5]], x=disc.nocor[[5]], model="ARD", pi=c(1,0))
plotSimmap(foo)
foo <- make.simmap(trees[[5]], x=disc.nocor[[5]], model=matrix(0,0,1,0), pi=c(1,0))
matrix(0,0,1,0)
foo <- make.simmap(trees[[5]], x=disc.nocor[[5]], model=matrix(c(0,0,1,0),2,2), pi=c(1,0))
plotSimmap(foo)
#simulate a derived discrete trait with no relationship
disc.nocor <- list()
q <- list(rbind(c(-.05, .05), c(0, 0)))
for(i in 1:100){
foo <- sim.char(trees[[i]], par=q, model="discrete", root=1)
foo2 <- as.vector(foo)
names(foo2) <- row.names(foo)
disc.nocor[[i]] <- foo2
print(i)
}
foo <- make.simmap(trees[[5]], x=disc.nocor[[5]], model=matrix(c(0,0,1,0),2,2), pi=c(1,0))
plotSimmap(foo)
foo <- make.simmap(trees[[1]], x=disc.nocor[[1]], model=matrix(c(0,0,1,0),2,2), pi=c(1,0))
contMap(trees[[i]], x=cont.traits[[i]])
plotSimmap(foo)
foo <- make.simmap(trees[[2]], x=disc.nocor[[2]], model=matrix(c(0,0,1,0),2,2), pi=c(1,0))
plotSimmap(foo)
mg <- c(1.10, 1.23, 1.07, 0.98, 0.94, 1.29, 1.04, 0.99, 1.34, 1.05,
1.18, 1.20, 1.08, 1.01, 0.94, 1.01, 0.85, 0.99, 1.05, 1.13)
mean.mg <- mean(mg)
sd.mg <- sd(mg)
se.mg <- sd.mg/sqrt(length(mg))
range68.2.mg <- c(mean.mg-sd.mg, mean.mg+sd.mg)
range95.5.mg <- c(mean.mg-2*sd.mg, mean.mg+2*sd.mg)
range95.7.mg <- c(mean.mg-3*sd.mg, mean.mg+3*sd.mg)
mean.mg-sd.mg
range68.2.mg <- c(mean.mg-se.mg, mean.mg+se.mg)
range95.5.mg <- c(mean.mg-2*se.mg, mean.mg+2*se.mg)
range95.7.mg <- c(mean.mg-3*se.mg, mean.mg+3*se.mg)
800/2000
750/2000
sd.vitc.group <- 800/2000 * 1200/2000
sd.plac.group <- 750/2000 * 1250/2000
sd.vitc.group <- (800/2000) * (1200/2000)
sd.plac.group <- (750/2000) * (1250/2000)
sd.plac.group <- (1000/2000) * (1000/2000)
sd.vitc.group <- sqrt((800/2000) * (1200/2000))
sd.plac.group <- sqrt((750/2000) * (1250/2000))
se.vitc.group <- sd.vitc.group/sqrt(2000)
se.plac.group <- sd.plac.group/sqrt(2000)
colds.vitc.group <- 800/2000
colds.plac.group <- 750/2000
vitc.group.95% <- c(colds.vitc.group - 1.96*se.vitc.group,
colds.vitc.group + 1.96*se.vitc.group)
vitc.group.95% <- c(colds.vitc.group - 1.96*se.vitc.group,
vitc.group.95 <- c(colds.vitc.group - 1.96*se.vitc.group,
colds.vitc.group + 1.96*se.vitc.group)
plac.group.95% <- c(colds.plac.group - 1.96*se.plac.group,
plac.group.95 <- c(colds.plac.group - 1.96*se.plac.group,
colds.plac.group + 1.96*se.plac.group)
colds.vitc.group <- 1200/2000
colds.plac.group <- 1250/2000
sd.vitc.group <- sqrt((800/2000) * (1200/2000))
sd.plac.group <- sqrt((750/2000) * (1250/2000))
se.vitc.group <- sd.vitc.group/sqrt(2000)
se.plac.group <- sd.plac.group/sqrt(2000)
vitc.group.95 <- c(colds.vitc.group - 1.96*se.vitc.group,
colds.vitc.group + 1.96*se.vitc.group)
plac.group.95 <- c(colds.plac.group - 1.96*se.plac.group,
colds.plac.group + 1.96*se.plac.group)
# Heath Blackmon
# Testing script to share with Jeff
install.packages("devtools")
library(devtools)
install_github("SAGA", username='coleoguy')
library(SAGA)
## First try loading data sets
data(PH) #Lynch and Walsh Nicotina plant height
data(SL) #Miller sperm length
data(SR) # Miller sperm receptacle length
results <- AnalyzeCrossesMM(SR, graph=T)
results <- AnalyzeCrossesMM(SR, even.sex=T, graph=T)
names(results)
results[[1]] -. foo
results[[1]] -> foo
results[[2]] -> foo
foo
data(SL) #Miller sperm length
library(SAGA)
results <- AnalyzeCrossesMM(SL, even.sex=T, graph=T)
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
setwd("~/Desktop/Dropbox/papers/LCA/datasets/jeffs.data")
identities <- c(3, 6, 9, 12, 15, 21, 18, 24, 27, 30, 33, 36, 45, 48, 39, 42)
# Jeff's 29C cohorts
data1 <- cbind(identities, read.csv("ban.osa.csv", row.names = 1, header = F)[, 1:2])
data2 <- cbind(identities, read.csv("col.ban.csv", row.names = 1, header = F)[, 1:2])
data3 <- cbind(identities, read.csv("dar.bho.csv", row.names = 1, header = F)[, 1:2])
data4 <- cbind(identities, read.csv("nig.sing.csv", row.names = 1, header = F)[, 1:2])
data5 <- cbind(identities, read.csv("pm.sin.csv", row.names = 1, header = F)[, 1:2])
data6 <- cbind(identities, read.csv("nig.cro.csv", row.names = 1, header = F)[, 1:2])
data7 <- cbind(identities, read.csv("per.inf.csv", row.names = 1, header = F)[, 1:2])
data8 <- cbind(identities, read.csv("osa.col.csv", row.names = 1, header = F)[, 1:2])
data9 <- cbind(identities, read.csv("cro.inf.csv", row.names = 1, header = F)[, 1:2])
data10 <- cbind(identities, read.csv("per.sq.csv", row.names = 1, header = F)[, 1:2])
data11 <- cbind(identities, read.csv("sin.cro.csv", row.names = 1, header = F)[, 1:2])
data12 <- cbind(identities, read.csv("ba.sq.csv", row.names = 1, header = F)[, 1:2])
data13 <- cbind(identities, read.csv("bh.sq.csv", row.names = 1, header = F)[, 1:2])
data14 <- cbind(identities, read.csv("da.sq.csv", row.names = 1, header = F)[, 1:2])
data15 <- cbind(identities, read.csv("ban.inf.csv", row.names = 1, header = F)[, 1:2])
setwd("~/Desktop/Dropbox/papers/LCA/results/jeff")
i <- 1
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 2
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 3
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 4
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 5
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 6
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 7
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 8
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 9
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 10
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 11
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 12
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 13
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 14
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 15
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
