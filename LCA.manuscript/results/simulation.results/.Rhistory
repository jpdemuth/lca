data <- (20 + (cmatrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
View(data)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
for(i in 3:12){
data <- (20 + (cmatrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
}
setwd("~/Desktop/Dropbox/papers/LCA/analyses")
#first lets load a c-matrix
setwd("~/Desktop/Dropbox/papers/LCA/SAGA/inst")
c.matrix <- read.csv("Cmatrix.mp.csv", row.names=1)
# For each dataset we will generate P1, P2, F1, rF1, F2a, BC1a, BC2a, 2BC1b, 2BC2a
lines <- c(3,6,9,12,15,27,39,51,54)
c.matrix <- c.matrix[lines, ]
c.matrix <- c.matrix[, (c(4,5,6,13:19,22:24) + 1) * -1]
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
#for all datasets we will have the mean (intercept=50)
#now lets test a composite effect of 10 for each of these
for(i in 3:12){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
}
i <- 5
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.5, max = .5, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
setwd("~/Desktop/Dropbox/papers/LCA/analyses")
#first lets load a c-matrix
setwd("~/Desktop/Dropbox/papers/LCA/SAGA/inst")
c.matrix <- read.csv("Cmatrix.mp.csv", row.names=1)
# For each dataset we will generate P1, P2, F1, rF1, F2a, BC1a, BC2a, 2BC1b, 2BC2a
lines <- c(3,6,9,12,15,27,39,51,54)
c.matrix <- c.matrix[lines, ]
c.matrix <- c.matrix[, (c(4,5,6,13:19,22:24) + 1) * -1]
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
#for all datasets we will have the mean (intercept=50)
#now lets test a composite effect of 10 for each of these
for(i in 3:12){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
foo <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
}
colnames(c.matrix)
results <- matrix(,100,10)
colnames(results) <- colnames(c.matrix)[3:12]
foo[[2]]
i <- 3
results <- matrix(,100,10)
colnames(results) <- colnames(c.matrix)[3:12]
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.2, max = .2, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
result[j, (i-2)] <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1,(i-1)]
}
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.2, max = .2, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
results[j, (i-2)] <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1,(i-1)]
}
View(results)
View(data)
setwd("~/Desktop/Dropbox/papers/LCA/analyses")
#first lets load a c-matrix
setwd("~/Desktop/Dropbox/papers/LCA/SAGA/inst")
c.matrix <- read.csv("Cmatrix.mp.csv", row.names=1)
# For each dataset we will generate P1, P2, F1, rF1, F2a, BC1a, BC2a, 2BC1b, 2BC2a
lines <- c(3,6,9,12,15,27,39,51,54)
c.matrix <- c.matrix[lines, ]
c.matrix <- c.matrix[, (c(4,5,6,13:19,22:24) + 1) * -1]
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
#for all datasets we will have the mean (intercept=50)
#now lets test a composite effect of 10 for each of these
results <- matrix(,100,10)
colnames(results) <- colnames(c.matrix)[3:12]
for(i in 3:12){
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.2, max = .2, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
results[j, (i-2)] <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1,(i-1)]
}
}
View(results)
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
results[j, (i-2)] <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1,(i-1)]
}
AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)]
as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
bar[1]+bar[2]
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
bar[1]+bar[2]
(bar[1]+bar[2]) > 10 & (bar[1]-bar[2]) < 10
results <- matrix(,100,10)
colnames(results) <- colnames(c.matrix)[3:12]
i <- 3
setwd("~/Desktop/Dropbox/papers/LCA/analyses")
#first lets load a c-matrix
setwd("~/Desktop/Dropbox/papers/LCA/SAGA/inst")
c.matrix <- read.csv("Cmatrix.mp.csv", row.names=1)
# For each dataset we will generate P1, P2, F1, rF1, F2a, BC1a, BC2a, 2BC1b, 2BC2a
lines <- c(3,6,9,12,15,27,39,51,54)
c.matrix <- c.matrix[lines, ]
c.matrix <- c.matrix[, (c(4,5,6,13:19,22:24) + 1) * -1]
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
#for all datasets we will have the mean (intercept=50)
#now lets test a composite effect of 10 for each of these
mw.avg <- und.se <- res.include <- matrix(,100,10)
colnames(mw.avg) <- colnames(res.includeund.se) <- colnames(res.include) <- colnames(c.matrix)[3:12]
mw.avg <- und.se <-
for(i in 3:12){
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
if((bar[1]+bar[2]) > 10 & (bar[1]-bar[2]) < 10){
res.include[j, (i-2)] <- T
}
mw.avg[j, (i-2)] <- bar[1]
und.se[j, (i-2)] <- bar[2]
}
}
View(mw.avg)
View(und.se)
View(res.include)
setwd("~/Desktop/Dropbox/papers/LCA/analyses")
#first lets load a c-matrix
setwd("~/Desktop/Dropbox/papers/LCA/SAGA/inst")
c.matrix <- read.csv("Cmatrix.mp.csv", row.names=1)
# For each dataset we will generate P1, P2, F1, rF1, F2a, BC1a, BC2a, 2BC1b, 2BC2a
lines <- c(3,6,9,12,15,27,39,51,54)
c.matrix <- c.matrix[lines, ]
c.matrix <- c.matrix[, (c(4,5,6,13:19,22:24) + 1) * -1]
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
#for all datasets we will have the mean (intercept=50)
#now lets test a composite effect of 10 for each of these
mw.avg <- und.se <- res.include <- matrix(,100,10)
colnames(mw.avg) <- colnames(res.includeund.se) <- colnames(res.include) <- colnames(c.matrix)[3:12]
mw.avg <- und.se <-
for(i in 3:12){
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
if((bar[1]+bar[2]) >= 10 & (bar[1]-bar[2]) <= 10){
res.include[j, (i-2)] <- T
}
mw.avg[j, (i-2)] <- bar[1]
und.se[j, (i-2)] <- bar[2]
}
}
View(res.include)
#analyze simulated datasets
setwd("~/Desktop/Dropbox/papers/LCA/datasets/simulated")
data1 <- read.csv("sim1.csv")
data2 <- read.csv("sim2.csv")
data3 <- read.csv("sim3.csv")
data4 <- read.csv("sim4.csv")
setwd("~/Desktop/Dropbox/papers/LCA/datasets")
dataL <- read.csv("lynch.example.csv", row.names=1)
foo <- AnalyzeCrossesMM(dataL, Cmatrix = "MP", model.sum = 0.95, even.sex = F)
VisModelSpace(foo, cex.u = 3)
View(c.matrix)
cor(c.matrix[,3:12])
sample(c(5,-5), size=3. replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
sample(c(5,-5), size=3, replace=T)
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(res.includeund.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
j <- 1
actors <- runif(min=3, max=12, n=3)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, actors] <- a
View(sim.true)
actors <- runif(min=3, max=12, n=3)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
View(sim.true)
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
actors <- runif(min=3, max=12, n=3)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
View(sim.true)
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(actors)])
bar
as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]]
)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]]
View(bar)
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]]
View(sim.true)
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]]
bar
View(c.matrix)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
View(bar)
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
j <- 1
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg[j, (actors-2)] <- bar[1,(actors-1)]
und.se[j, (actors-2)] <- bar[2,(actors-1)]
View(bar)
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg[j, (actors-2)] <- bar[1,]
und.se[j, (actors-2)] <- bar[2,]
View(mw.avg)
View(mw.avg2)
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
View(mw.avg2)
View(sim.true)
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
View(sim.true)
View(mw.avg2)
setwd("~/Desktop/Dropbox/papers/LCA/analyses")
#first lets load a c-matrix
setwd("~/Desktop/Dropbox/papers/LCA/SAGA/inst")
c.matrix <- read.csv("Cmatrix.mp.csv", row.names=1)
# For each dataset we will generate P1, P2, F1, rF1, F2a, BC1a, BC2a, 2BC1b, 2BC2a
lines <- c(3,6,9,12,15,27,39,51,54)
c.matrix <- c.matrix[lines, ]
c.matrix <- c.matrix[, (c(4,5,6,13:19,22:24) + 1) * -1]
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
#for all datasets we will have the mean (intercept=50)
#now lets test a composite effect of 10 for each of these
mw.avg <- und.se <- res.include <- matrix(,100,10)
colnames(mw.avg) <- colnames(res.includeund.se) <- colnames(res.include) <- colnames(c.matrix)[3:12]
for(i in 3:12){
for(j in 1:100){
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
if((bar[1]+bar[2]) >= 10 & (bar[1]-bar[2]) <= 10){
res.include[j, (i-2)] <- T
}
mw.avg[j, (i-2)] <- bar[1]
und.se[j, (i-2)] <- bar[2]
}
}
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,100,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
for(j in 1:1000){
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
}
View(mw.avg)
setwd("~/Desktop/Dropbox/papers/LCA/results/simulation.results")
setwd("~/Desktop/Dropbox/papers/LCA/results/simulation.results")
write.csv(mw.avg, file="mw.avg.single.par")
write.csv(mw.avg2, file="mw.avg.three.par")
write.csv(res.include, file="match.single.par")
write.csv(sim.true, file="gen.val.three.par")
write.csv(mw.avg, file="se.mw.avg.three.par")
mw.avg2 <- und.se2 <- res.include2 <- sim.true <- matrix(0,1000,10)
colnames(mw.avg2) <- colnames(und.se2) <- colnames(sim.true) <- colnames(res.include2) <- colnames(c.matrix)[3:12]
for(j in 1:1000){
actors <- sample(3:12, size=3, replace=F)
a <- sample(c(5,-5), size=3, replace=T)
sim.true[j, (actors-2)] <- a
data <- (20 + (c.matrix[,actors[1]] * a[1]) + (c.matrix[,actors[2]] * a[2]) + (c.matrix[,actors[3]] * a[3]))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][,(actors-1)]
mw.avg2[j, (actors-2)] <- bar[1,]
und.se2[j, (actors-2)] <- bar[2,]
}
cor(c.matrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/simulation.results")
write.csv(sim.true, file="gen.val.three.par")
write.csv(mw.avg2, file="se.mw.avg.three.par")
write.csv(und.se2, file="mw.avg.three.par")
View(c.matrix)
i <- 7
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
data <- (20 + (c.matrix[,i] * 10))
foo <- data + runif(min = -.1, max = .1, n = 1)
data <- matrix(c(lines, foo, data * 0.1),length(lines),3)
bar <- as.numeric(AnalyzeCrossesMM(data, Cmatrix = "MP", model.sum = 0.95, even.sex = F)[[2]][1:2,(i-1)])
View(c.matrix)
cor(c.matrix[,7],c.matrix[,5])
cor(c.matrix[,7],c.matrix[,5] + c.matrix[,6])
cor(c.matrix[,7],c.matrix[,5] - c.matrix[,6])
