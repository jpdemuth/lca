}
census <- foo
}
y <- sum(unlist(census))
print(y)
y <- add.bigz(census)
y <- add.bigz(unlist(census))
unlist(census)
37450/2
.2^5
.2^6
99660/2
sqrt(1/2)
1 - .5^2
(1 - .5^2) * (1-.2^2)
(1 - .5^2) * (.2^2)
(.5^2) * (1-.2^2)
(.5^2) * (.2^2)
(1 - .5^2) * (1-.2^2) * 95
(1 - .5^2) * (.2^2) * 38
(.5^2) * (1-.2^2) * 90
(.5^2) * (.2^2) * 33
(1 - .5^2) * (1-.2^2) * 95 +
(1 - .5^2) * (.2^2) * 38 +
(.5^2) * (1-.2^2) * 90 +
(.5^2) * (.2^2) * 33
95*.4
38*.1
90*.4
33*.1
95*.4 +
38*.1 +
90*.4 +
33*.1
91.47-81.1
95-38
57*.2
2*.25*2.5
2*.64*11.4
91.47-20.74
library("evobiR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rgbif", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("rgbif")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("rgdal")
library("rgdal", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("taxize", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("evobiR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
system.file("3.fasta")
system.file("3.fasta", package="evobiR")
read.fasta(system.file("3.fasta", package='evobiR'))->fii
readFasta(system.file("3.fasta", package='evobiR'))->fii
CalcPopD
read.alignment(system.file("3.fasta", package='evobiR'))->fii
read.alignment(system.file("3.fasta", package='evobiR'), format='fasta')->fii
install.packages("evobiR")
citation(geiger)
citation("geiger")
library(evobiR)
CoalSim(census = 15, lw = 2, ln.col = 'blue')
CoalSim(census = 15, lw = 2, ln.col = 'blue')
foo <- c(1,2,3,4,5)
mode(foo)
Mode(foo)
# just a testing script
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
setwd("~/Desktop/Dropbox/papers/LCA/datasets/jeffs.data")
identities <- c(3, 6, 9, 12, 15, 21, 18, 24, 27, 30, 33, 36, 45, 48, 39, 42)
# Jeff's 29C cohorts
data1 <- cbind(identities, read.csv("ban.osa.csv", row.names = 1, header = F)[, 1:2])
data2 <- cbind(identities, read.csv("col.ban.csv", row.names = 1, header = F)[, 1:2])
data3 <- cbind(identities, read.csv("dar.bho.csv", row.names = 1, header = F)[, 1:2])
data4 <- cbind(identities, read.csv("nig.sing.csv", row.names = 1, header = F)[, 1:2])
data5 <- cbind(identities, read.csv("pm.sin.csv", row.names = 1, header = F)[, 1:2])
data6 <- cbind(identities, read.csv("nig.cro.csv", row.names = 1, header = F)[, 1:2])
data7 <- cbind(identities, read.csv("per.inf.csv", row.names = 1, header = F)[, 1:2])
data8 <- cbind(identities, read.csv("osa.col.csv", row.names = 1, header = F)[, 1:2])
data9 <- cbind(identities, read.csv("cro.inf.csv", row.names = 1, header = F)[, 1:2])
data10 <- cbind(identities, read.csv("per.sq.csv", row.names = 1, header = F)[, 1:2])
data11 <- cbind(identities, read.csv("sin.cro.csv", row.names = 1, header = F)[, 1:2])
data12 <- cbind(identities, read.csv("ba.sq.csv", row.names = 1, header = F)[, 1:2])
data13 <- cbind(identities, read.csv("bh.sq.csv", row.names = 1, header = F)[, 1:2])
data14 <- cbind(identities, read.csv("da.sq.csv", row.names = 1, header = F)[, 1:2])
data15 <- cbind(identities, read.csv("ban.inf.csv", row.names = 1, header = F)[, 1:2])
setwd("~/Desktop/Dropbox/papers/LCA/results/jeff")
i <- 2
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
VisModelSpace(foo)
foo2 <- foo
i <- 4
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
VisModelSpace(foo)
par(mfcol=c(1,2))
VisModelSpace(foo)
VisModelSpace(foo2)
help(VisModelSpace)
VisModelSpace(foo,cex.u=2)
text(1,1,labels="A")
text(31,31,labels="A")
text(32,0,labels="A")
text(0,32,labels="A")
text(-1,32,labels="A")
text(-1,33,labels="A")
text(-1,34,labels="A")
help(text)
help(par)
text(-1,34,labels="A", font=2, cex=1.5)
par(mfcol=c(1,2))
VisModelSpace(foo,cex.u=2)
text(-1,34,labels="A", font=2, cex=1.5)
VisModelSpace(foo2)
text(-1,34,labels="B", font=2, cex=1.5)
help(mtext)
install("SAGA")
library(SAGA)
par(mfcol=c(1,2))
VisModelSpace(foo,cex.u=2)
text(-1,34,labels="A", font=2, cex=1.5)
VisModelSpace(foo2)
text(-1,34,labels="B", font=2, cex=1.5)
setwd("~/Desktop/Dropbox/papers/LCA")
install("SAGA")
library(SAGA)
par(mfcol=c(1,2))
VisModelSpace(foo,cex.u=2)
text(-1,34,labels="A", font=2, cex=1.5)
VisModelSpace(foo2)
text(-1,34,labels="B", font=2, cex=1.5)
setwd("~/Desktop/Dropbox/papers/LCA")
install("SAGA")
library(SAGA)
par(mfcol=c(1,2))
VisModelSpace(foo,cex.u=2)
text(-1,34,labels="A", font=2, cex=1.5)
VisModelSpace(foo2)
text(-1,34,labels="B", font=2, cex=1.5)
par(mfcol=c(1,2))
VisModelSpace(foo2)
text(-1,34,labels="A", font=2, cex=1.5)
VisModelSpace(foo)
text(-1,34,labels="B", font=2, cex=1.5)
IT <- c(97.79,  -0.07,	-181.63,	-38.94,	-0.24,	158.12,	0.04,	-16.67)
JS <- c(98.57,	-0.66,	-183.39,	-39.44,	-3.74,	159.15,	2.34,	-16.32)
foo <- rbind(IT,JS)
barplot(foo[1,])
points(foo[2,])
98/100
100/98
JS/IT
# just a testing script
setwd("~/Desktop/Dropbox/papers/LCA")
library(devtools)
install("SAGA")
library(SAGA)
setwd("~/Desktop/Dropbox/papers/LCA/datasets/jeffs.data")
identities <- c(3, 6, 9, 12, 15, 21, 18, 24, 27, 30, 33, 36, 45, 48, 39, 42)
# Jeff's 29C cohorts
data1 <- cbind(identities, read.csv("ban.osa.csv", row.names = 1, header = F)[, 1:2])
data2 <- cbind(identities, read.csv("col.ban.csv", row.names = 1, header = F)[, 1:2])
data3 <- cbind(identities, read.csv("dar.bho.csv", row.names = 1, header = F)[, 1:2])
data4 <- cbind(identities, read.csv("nig.sing.csv", row.names = 1, header = F)[, 1:2])
data5 <- cbind(identities, read.csv("pm.sin.csv", row.names = 1, header = F)[, 1:2])
data6 <- cbind(identities, read.csv("nig.cro.csv", row.names = 1, header = F)[, 1:2])
data7 <- cbind(identities, read.csv("per.inf.csv", row.names = 1, header = F)[, 1:2])
data8 <- cbind(identities, read.csv("osa.col.csv", row.names = 1, header = F)[, 1:2])
data9 <- cbind(identities, read.csv("cro.inf.csv", row.names = 1, header = F)[, 1:2])
data10 <- cbind(identities, read.csv("per.sq.csv", row.names = 1, header = F)[, 1:2])
data11 <- cbind(identities, read.csv("sin.cro.csv", row.names = 1, header = F)[, 1:2])
data12 <- cbind(identities, read.csv("ba.sq.csv", row.names = 1, header = F)[, 1:2])
data13 <- cbind(identities, read.csv("bh.sq.csv", row.names = 1, header = F)[, 1:2])
data14 <- cbind(identities, read.csv("da.sq.csv", row.names = 1, header = F)[, 1:2])
data15 <- cbind(identities, read.csv("ban.inf.csv", row.names = 1, header = F)[, 1:2])
setwd("~/Desktop/Dropbox/papers/LCA/results/jeff")
for(i in 1:15){
print(i)
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
#VisModelSpace(foo)
}
i <- 9
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
i <- 11
foo <- AnalyzeCrossesMM(get(paste("data", i, sep="")), Cmatrix = "MP",
model.sum = 0.95, even.sex = F,
graph=T, max.models = 70000)
#ok now to work
library(plotrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/miller")
spl <- read.csv("res.spl.csv")
spl.var.imp <- round(read.csv("res.spl.var.imp.csv", header=F)[,2] * 100)
good.ones <- which(spl.var.imp > 15)
pos.colors <- rainbow(100, start = 0.6, end = 1)
var.colors <- pos.colors[spl.var.imp]
segments.t <- spl[1,3:19] + spl[2,3:19]
segments.b <- spl[1,3:19] - spl[2,3:19]
#foo <- barplot(as.numeric(spl[1,3:19]), names=colnames(spl)[3:19],
#               ylim=c((min(segments.b))-.01,
#                      (max(segments.t))+.03), col=var.colors)
#for(i in 1:length(foo)){
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
#  lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
#}
segments.t <- segments.t[good.ones]
segments.b <- segments.b[good.ones]
var.colors <- pos.colors[spl.var.imp[good.ones]]
foo <- barplot(as.numeric(spl[1,good.ones+2]), names=colnames(spl)[good.ones+2],
ylim=c((min(segments.b))-.01, (max(segments.t))+.03), col=var.colors,
xlab="Composite Effects", ylab="Parameter Estimate")
for(i in 1:length(foo)){
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
}
par(xpd = TRUE)
locs <- par("usr")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("0", "0.5", "1"),
rect.col = pos.colors,
cex = 0.6,
align="rb",
gradient = "y")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("", "", ""),
rect.col = pos.colors,
cex = 0.6,
gradient = "y")
par(xpd = TRUE)
text(x = (((locs[2]) + (locs[2] + (locs[2]*.03)))/2),
y = locs[4],
labels = "Variable\nImportance", cex = 0.7, pos = 3)
#ok now to work
library(plotrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/miller")
spl <- read.csv("res.spl.csv")
spl.var.imp <- round(read.csv("res.spl.var.imp.csv", header=F)[,2] * 100)
good.ones <- which(spl.var.imp > 15)
pos.colors <- foo.colors <- heat.colors(100)[100:1]
var.colors <- pos.colors[spl.var.imp]
segments.t <- spl[1,3:19] + spl[2,3:19]
segments.b <- spl[1,3:19] - spl[2,3:19]
#foo <- barplot(as.numeric(spl[1,3:19]), names=colnames(spl)[3:19],
#               ylim=c((min(segments.b))-.01,
#                      (max(segments.t))+.03), col=var.colors)
#for(i in 1:length(foo)){
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
#  lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
#}
segments.t <- segments.t[good.ones]
segments.b <- segments.b[good.ones]
var.colors <- pos.colors[spl.var.imp[good.ones]]
foo <- barplot(as.numeric(spl[1,good.ones+2]), names=colnames(spl)[good.ones+2],
ylim=c((min(segments.b))-.01, (max(segments.t))+.03), col=var.colors,
xlab="Composite Effects", ylab="Parameter Estimate")
for(i in 1:length(foo)){
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
}
par(xpd = TRUE)
locs <- par("usr")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("0", "0.5", "1"),
rect.col = pos.colors,
cex = 0.6,
align="rb",
gradient = "y")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("", "", ""),
rect.col = pos.colors,
cex = 0.6,
gradient = "y")
par(xpd = TRUE)
text(x = (((locs[2]) + (locs[2] + (locs[2]*.03)))/2),
y = locs[4],
labels = "Variable\nImportance", cex = 0.7, pos = 3)
#ok now to work
library(plotrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/miller")
spl <- read.csv("res.spl.csv")
spl.var.imp <- round(read.csv("res.spl.var.imp.csv", header=F)[,2] * 100)
good.ones <- which(spl.var.imp > 15)
pos.colors <- foo.colors <- heat.colors(100)[100:1]
var.colors <- pos.colors[spl.var.imp]
segments.t <- spl[1,3:19] + spl[2,3:19]
segments.b <- spl[1,3:19] - spl[2,3:19]
#foo <- barplot(as.numeric(spl[1,3:19]), names=colnames(spl)[3:19],
#               ylim=c((min(segments.b))-.01,
#                      (max(segments.t))+.03), col=var.colors)
#for(i in 1:length(foo)){
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
#  lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
#}
segments.t <- segments.t[good.ones]
segments.b <- segments.b[good.ones]
var.colors <- pos.colors[spl.var.imp[good.ones]]
foo <- barplot(as.numeric(spl[1,good.ones+2]), names=colnames(spl)[good.ones+2],
ylim=c((min(segments.b))-.01, (max(segments.t))+.03), col=var.colors,
xlab="Composite Effects", ylab="Parameter Estimate")
for(i in 1:length(foo)){
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
}
par(xpd = TRUE)
locs <- par("usr")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("0", "0.5", "1"),
rect.col = pos.colors,
cex = 0.6,
align="rb",
gradient = "y")
color.legend(locs[2] ,  #xl
(locs[4] - loc[3]) * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("", "", ""),
rect.col = pos.colors,
cex = 0.6,
gradient = "y")
par(xpd = TRUE)
text(x = (((locs[2]) + (locs[2] + (locs[2]*.03)))/2),
y = locs[4],
labels = "Variable\nImportance", cex = 0.7, pos = 3)
#ok now to work
library(plotrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/miller")
spl <- read.csv("res.spl.csv")
spl.var.imp <- round(read.csv("res.spl.var.imp.csv", header=F)[,2] * 100)
good.ones <- which(spl.var.imp > 15)
pos.colors <- foo.colors <- heat.colors(100)[100:1]
var.colors <- pos.colors[spl.var.imp]
segments.t <- spl[1,3:19] + spl[2,3:19]
segments.b <- spl[1,3:19] - spl[2,3:19]
#foo <- barplot(as.numeric(spl[1,3:19]), names=colnames(spl)[3:19],
#               ylim=c((min(segments.b))-.01,
#                      (max(segments.t))+.03), col=var.colors)
#for(i in 1:length(foo)){
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
#  lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
#}
segments.t <- segments.t[good.ones]
segments.b <- segments.b[good.ones]
var.colors <- pos.colors[spl.var.imp[good.ones]]
foo <- barplot(as.numeric(spl[1,good.ones+2]), names=colnames(spl)[good.ones+2],
ylim=c((min(segments.b))-.01, (max(segments.t))+.03), col=var.colors,
xlab="Composite Effects", ylab="Parameter Estimate")
for(i in 1:length(foo)){
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
}
par(xpd = TRUE)
locs <- par("usr")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("0", "0.5", "1"),
rect.col = pos.colors,
cex = 0.6,
align="rb",
gradient = "y")
color.legend(locs[2] ,  #xl
(locs[4] - locs[3]) * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("", "", ""),
rect.col = pos.colors,
cex = 0.6,
gradient = "y")
par(xpd = TRUE)
text(x = (((locs[2]) + (locs[2] + (locs[2]*.03)))/2),
y = locs[4],
labels = "Variable\nImportance", cex = 0.7, pos = 3)
locs
locs[4] - locs[3]
help(par)
#ok now to work
library(plotrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/miller")
spl <- read.csv("res.spl.csv")
spl.var.imp <- round(read.csv("res.spl.var.imp.csv", header=F)[,2] * 100)
good.ones <- which(spl.var.imp > 15)
pos.colors <- foo.colors <- heat.colors(100)[100:1]
var.colors <- pos.colors[spl.var.imp]
segments.t <- spl[1,3:19] + spl[2,3:19]
segments.b <- spl[1,3:19] - spl[2,3:19]
#foo <- barplot(as.numeric(spl[1,3:19]), names=colnames(spl)[3:19],
#               ylim=c((min(segments.b))-.01,
#                      (max(segments.t))+.03), col=var.colors)
#for(i in 1:length(foo)){
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
#  lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
#}
segments.t <- segments.t[good.ones]
segments.b <- segments.b[good.ones]
var.colors <- pos.colors[spl.var.imp[good.ones]]
foo <- barplot(as.numeric(spl[1,good.ones+2]), names=colnames(spl)[good.ones+2],
ylim=c((min(segments.b))-.01, (max(segments.t))+.03), col=var.colors,
xlab="Composite Effects", ylab="Parameter Estimate")
for(i in 1:length(foo)){
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
}
par(xpd = TRUE)
locs <- par("usr")
color.legend(locs[2] ,  #xl
locs[4] * 0.5,  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("0", "0.5", "1"),
rect.col = pos.colors,
cex = 0.6,
align="rb",
gradient = "y")
color.legend(locs[2] ,  #xl
locs[4] - ((locs[4] - locs[3]) * 0.5),  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("", "", ""),
rect.col = pos.colors,
cex = 0.6,
gradient = "y")
par(xpd = TRUE)
text(x = (((locs[2]) + (locs[2] + (locs[2]*.03)))/2),
y = locs[4],
labels = "Variable\nImportance", cex = 0.7, pos = 3)
#ok now to work
library(plotrix)
setwd("~/Desktop/Dropbox/papers/LCA/results/miller")
spl <- read.csv("res.spl.csv")
spl.var.imp <- round(read.csv("res.spl.var.imp.csv", header=F)[,2] * 100)
good.ones <- which(spl.var.imp > 15)
pos.colors <- foo.colors <- heat.colors(100)[100:1]
var.colors <- pos.colors[spl.var.imp]
segments.t <- spl[1,3:19] + spl[2,3:19]
segments.b <- spl[1,3:19] - spl[2,3:19]
#foo <- barplot(as.numeric(spl[1,3:19]), names=colnames(spl)[3:19],
#               ylim=c((min(segments.b))-.01,
#                      (max(segments.t))+.03), col=var.colors)
#for(i in 1:length(foo)){
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
#  lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
#  lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
#}
segments.t <- segments.t[good.ones]
segments.b <- segments.b[good.ones]
var.colors <- pos.colors[spl.var.imp[good.ones]]
foo <- barplot(as.numeric(spl[1,good.ones+2]), names=colnames(spl)[good.ones+2],
ylim=c((min(segments.b))-.01, (max(segments.t))+.03), col=var.colors,
xlab="Composite Effects", ylab="Parameter Estimate")
for(i in 1:length(foo)){
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.t[i], times=2), col="black",lwd=2)
lines(x=c(foo[i]+.2, foo[i]-.2), y=rep(segments.b[i], times=2), col="black",lwd=2)
lines(y=c(segments.t[i], segments.b[i]), x=rep(foo[i], times=2), col="black",lwd=2)
}
par(xpd = TRUE)
locs <- par("usr")
color.legend(locs[2] ,  #xl
locs[4] - ((locs[4] - locs[3]) * 0.5),  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("0", "0.5", "1"),
rect.col = pos.colors,
cex = 0.6,
align="rb",
gradient = "y")
color.legend(locs[2] ,  #xl
locs[4] - ((locs[4] - locs[3]) * 0.5),  #yb
locs[2] + (locs[2]*.03),    #xr
locs[4],        #yt
legend = c("", "", ""),
rect.col = pos.colors,
cex = 0.6,
gradient = "y")
par(xpd = TRUE)
text(x = (((locs[2]) + (locs[2] + (locs[2]*.03)))/2),
y = locs[4],
labels = "Variable\nImportance", cex = 0.7, pos = 3)
